{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://nodemcy-iot-app/./src/config/index.js","webpack://nodemcy-iot-app/./src/controllers/TempHumidity.controller.js","webpack://nodemcy-iot-app/./src/models/MaxMinParams.js","webpack://nodemcy-iot-app/./src/models/TempHumidity.js","webpack://nodemcy-iot-app/./src/routes/index.js","webpack://nodemcy-iot-app/./src/routes/init.routes.js","webpack://nodemcy-iot-app/./src/routes/temphumidity.routes.js","webpack://nodemcy-iot-app/external commonjs \"cors\"","webpack://nodemcy-iot-app/external commonjs \"dotenv\"","webpack://nodemcy-iot-app/external commonjs \"express\"","webpack://nodemcy-iot-app/external commonjs \"mongoose\"","webpack://nodemcy-iot-app/webpack/bootstrap","webpack://nodemcy-iot-app/./index.js"],"sourcesContent":["const config = {\r\n  BASE_PATH: \"/api\",\r\n}\r\n\r\nmodule.exports = config;","const TempHumidity = require(\"../models/TempHumidity\");\r\nconst MaxMinParams = require(\"../models/MaxMinParams\");\r\n\r\n// GET ALL TEMPERATURES AND HUMIDITIES\r\nconst getData = async (req, res) => {\r\n  if (req.query.temperature && req.query.humidity && req.query.alarm) {\r\n    createData(req, res);\r\n    return;\r\n  }\r\n  try {\r\n    const data = await TempHumidity.find().sort({ createdAt: - 1 });\r\n    res.status(200).json(data);\r\n  } catch (err) {\r\n    res.status(500).json({ message: err.message });\r\n  }\r\n};\r\n\r\n// REGISTER NEW TEMPERATURE, HUMIDITY AND ALARM\r\nconst createData = async (req, res) => {\r\n  const data = new TempHumidity({\r\n    temperature: req.query.temperature,\r\n    humidity: req.query.humidity,\r\n    alarm: req.query.alarm,\r\n  });\r\n  try {\r\n    const newData = await data.save();\r\n    res.status(201).json(newData);\r\n  } catch (err) {\r\n    console.log(err);\r\n    res.status(400).json({ message: err.message });\r\n  }\r\n};\r\n\r\n// GET MAX AND MIN TEMPERATURE AND HUMIDITY PARAMS SET BY USER\r\nconst getMaxMinParams = async (req, res) => {\r\n  try {\r\n    const data = await MaxMinParams.find().sort({ createdAt: -1 });\r\n    res.status(200).json(data);\r\n  } catch (err) {\r\n    res.status(500).json({ message: err.message });\r\n  }\r\n};\r\n\r\n// SET NEW MAX AND MIN TEMPERATURE AND HUMIDITY PARAMS BY USER\r\nconst setMaxMinParams = async (req, res) => {\r\n  const data = new MaxMinParams({\r\n    maxTemp: req.body.maxTemp,\r\n    minTemp: req.body.minTemp,\r\n    maxHum: req.body.maxHum,\r\n    minHum: req.body.minHum,\r\n  });\r\n  try {\r\n    const newData = await data.save();\r\n    res.status(200).json(newData);\r\n  } catch (err) {\r\n    res.status(500).json({ message: err.message });\r\n  }\r\n};\r\n\r\n// EXPORT ALL FUNCTIONS\r\nmodule.exports = {\r\n  getData,\r\n  createData,\r\n  getMaxMinParams,\r\n  setMaxMinParams,\r\n};\r\n\r\n\r\n// {\r\n//   \"maxTemp\": 0,\r\n//   \"minTemp\": 0,\r\n//   \"maxHum\": 0,\r\n//   \"minHum\": 0\r\n// }","const mongoose = require(\"mongoose\");\r\n\r\nconst MaxMinParamsSchema = new mongoose.Schema(\r\n  {\r\n    maxTemp: {\r\n      type: Number,\r\n      required: true,\r\n      default: 0,\r\n    },\r\n    minTemp: {\r\n      type: Number,\r\n      required: true,\r\n      default: 0,\r\n    },\r\n    maxHum: {\r\n      type: Number,\r\n      required: true,\r\n      default: 0,\r\n    },\r\n    minHum: {\r\n      type: Number,\r\n      required: true,\r\n      default: 0,\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nmodule.exports = mongoose.model(\"MaxMinParams\", MaxMinParamsSchema);\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst TempHumiditySchema = new mongoose.Schema(\r\n  {\r\n    temperature: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    humidity: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    alarm: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nmodule.exports = mongoose.model(\"TempHumidity\", TempHumiditySchema);\r\n","const config = require(\"../config/index\");\r\nconst temphumidityRouter = require(\"./temphumidity.routes\");\r\nconst initRouter = require(\"./init.routes\");\r\n\r\nconst initRoutes = app => {\r\n  app.use(`${config.BASE_PATH}/`, initRouter);\r\n  app.use(`${config.BASE_PATH}/data`, temphumidityRouter);\r\n}\r\n\r\nmodule.exports = initRoutes;","const express = require('express');\r\nconst router = express.Router();\r\n\r\nrouter.get('/', (req, res) => {\r\n  res.status(200).json({message: \"Welcome to the IoT API\"});\r\n});\r\n\r\nmodule.exports = router;","const express = require('express');\r\nconst router = express.Router();\r\nconst controller = require('../controllers/TempHumidity.controller');\r\n\r\nrouter.get('/get', controller.getData);\r\nrouter.get('/post', controller.createData);\r\nrouter.get('/params', controller.getMaxMinParams);\r\nrouter.post('/params', controller.setMaxMinParams);\r\n\r\nmodule.exports = router;","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// CONFIG\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  require(\"dotenv\").config();\r\n}\r\nconst config = require(\"./src/config/index\");\r\n\r\n// SERVER\r\nconst express = require(\"express\");\r\nconst app = express();\r\nconst port = process.env.PORT || 3000;\r\n\r\n// CORS\r\nconst cors = require(\"cors\");\r\napp.use(\r\n  cors({\r\n    origin: \"*\",\r\n    optionsSuccessStatus: 200,\r\n  })\r\n);\r\n\r\n// MIDDLEWARE\r\napp.use(express.json());\r\n\r\n// DB\r\nconst mongoose = require(\"mongoose\");\r\nconst db = mongoose.connect(process.env.DATABASE_URL, {\r\n  useNewUrlParser: true,\r\n});\r\ndb.then(() => {\r\n  app.listen(port, () => console.log(`App listening on port ${port}!`));\r\n}).catch((err) => console.log(err));\r\n\r\n// REDIRECT TO BASE PATH\r\napp.get(\"/\", (_, res) => {\r\n  res.redirect(config.BASE_PATH);\r\n});\r\n\r\n// ROUTES\r\nconst initRoutes = require(\"./src/routes/index\");\r\ninitRoutes(app);\r\n\r\n// 404 ERROR\r\napp.use((_, res) => {\r\n  res.status(404).json({ message: \"Resource not found\" });\r\n});"],"names":["config","BASE_PATH","module","exports","TempHumidity","require","MaxMinParams","getData","req","res","query","temperature","humidity","alarm","createData","find","sort","createdAt","data","status","json","message","save","newData","console","log","getMaxMinParams","setMaxMinParams","maxTemp","body","minTemp","maxHum","minHum","mongoose","MaxMinParamsSchema","Schema","type","Number","required","timestamps","model","TempHumiditySchema","Boolean","temphumidityRouter","initRouter","initRoutes","app","use","express","router","Router","get","controller","post","process","env","NODE_ENV","port","PORT","cors","origin","optionsSuccessStatus","db","connect","DATABASE_URL","useNewUrlParser","then","listen","err","_","redirect"],"sourceRoot":""}